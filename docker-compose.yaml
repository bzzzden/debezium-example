version: "3.8"
services:
  zookeeper:
    image: quay.io/debezium/zookeeper:2.4
    container_name: zookeeper
    ports:
      - "2181:2181"
      - "2888:2888"
      - "3888:3888"
    networks:
      - ui-network
    volumes: 
    #   - ./data/zoo/data:/var/lib/zookeeper/data
    #   - ./data/zoo/log:/var/lib/zookeeper/log  
      - ./data/zoo/data:/zookeeper/data
      - ./data/zoo/log:/zookeeper/log
      - ./data/zoo/conf:/zookeeper/conf
      - ./data/zoo/txns:/zookeeper/txns
  kafka:
    image: quay.io/debezium/kafka:2.4
    container_name: kafka
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      - ZOOKEEPER_CONNECT=zookeeper:2181
    networks:
      - ui-network
    volumes:
      - ./data/kafka/data:/kafka/data
      - ./data/kafka/logs:/kafka/logs
      - ./data/kafka/config:/kafka/config 
# MySQL - для примера
  mysql: # тут лежит база
    image: quay.io/debezium/example-mysql:2.4
    container_name: mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=debezium 
      - MYSQL_USER=mysqluser
      - MYSQL_PASSWORD=mysqlpw
    networks:
      - ui-network
    volumes:
      - ./data/db/mysql:/var/lib/mysql  
  # mysqlterm: # тут подключаемся к базе
  #   image: mysql:8.0
  #   container_name: mysqlterm
  #   depends_on:
  #     - mysql
  #   environment:
  #     - MYSQL_ALLOW_EMPTY_PASSWORD=True
  #   networks:
  #     - ui-network
  postgresql:
    image: quay.io/debezium/postgres:15-alpine
    container_name: postgresql
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=postgresdb 
      - POSTGRES_USER=postgresuser
      - POSTGRES_PASSWORD=postgresS3cret  
    volumes:
      - ./data/db/postgresql/data:/var/lib/postgresql/data 
    networks:
      - ui-network
  # Kafka connect: сюда регать коннекторы API к kafka
  connect:
    image: quay.io/debezium/connect:2.4
    container_name: connect
    ports:
      - "8083:8083"
    depends_on:
      - kafka
      - mysql
    environment:
     - BOOTSTRAP_SERVERS=kafka:9092
     - GROUP_ID=1
     - CONFIG_STORAGE_TOPIC=my_connect_configs
     - OFFSET_STORAGE_TOPIC=my_connect_offsets
     - STATUS_STORAGE_TOPIC=my_source_connect_statuses
    volumes:
      - ./connector-plugins/confluentinc-kafka-connect-jdbc-10.7.4/lib:/kafka/connect/confluentinc-kafka-connect-jdbc-10.7.4 
    networks:
      - ui-network
# kafka event listner
  watcher:
    image: quay.io/debezium/kafka:2.4
    container_name: watcher
    depends_on:
      - zookeeper
      - kafka
    command:  watch-topic -a -k customers
    # command:  watch-topic -a -k dbserver1.inventory.customers
    environment: 
      - ZOOKEEPER_CONNECT=zookeeper:2181 #  этих ребят надо указывать явно
      - KAFKA_BROKER=kafka:9092
      - KAFKA_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    networks:
      - ui-network
# UI
  debezium-u1:
    image: quay.io/debezium/debezium-ui:2.4
    container_name: debezium-ui
    ports:
      - "8880:8080"
    depends_on:
      - connect
    environment: 
      - KAFKA_CONNECT_URIS=http://connect:8083
    networks:
      - ui-network
networks:
  ui-network: